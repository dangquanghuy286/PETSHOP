import { useEffect, useState } from "react"; // Import c√°c hook c·ªßa React
import { getProductList } from "../../services/productsService"; // Import h√†m l·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ API
import { getCategoryList } from "../../services/cartegoryService"; // Import h√†m l·∫•y danh m·ª•c t·ª´ API
import ProductItem from "./StoreItem"; // Import component hi·ªÉn th·ªã t·ª´ng s·∫£n ph·∫©m
import { useNavigate } from "react-router-dom"; // Import hook ƒëi·ªÅu h∆∞·ªõng trong React Router

function StoreAll() {
  // üü¢ State l∆∞u danh s√°ch s·∫£n ph·∫©m t·ª´ API
  const [data, setData] = useState([]);

  // üü¢ State l∆∞u danh s√°ch danh m·ª•c t·ª´ API
  const [dataCata, setDataCata] = useState([]);

  // üü¢ State l∆∞u danh m·ª•c ƒë∆∞·ª£c ch·ªçn ƒë·ªÉ l·ªçc
  const [selectedCategory, setSelectedCategory] = useState("");

  // üü¢ State l∆∞u kho·∫£ng gi√° ƒë∆∞·ª£c ch·ªçn ƒë·ªÉ l·ªçc
  const [selectedPriceRange, setSelectedPriceRange] = useState("");

  // üü¢ Hook ƒëi·ªÅu h∆∞·ªõng trang
  const navigate = useNavigate();

  // üü¢ Fetch danh s√°ch s·∫£n ph·∫©m t·ª´ API khi component mount
  useEffect(() => {
    const fetchProducts = async () => {
      const res = await getProductList(); // G·ªçi API l·∫•y danh s√°ch s·∫£n ph·∫©m
      setData(res); // L∆∞u danh s√°ch s·∫£n ph·∫©m v√†o state
    };
    fetchProducts();
  }, []);

  // üü¢ Fetch danh s√°ch danh m·ª•c t·ª´ API khi component mount
  useEffect(() => {
    const fetchCategories = async () => {
      const res = await getCategoryList(); // G·ªçi API l·∫•y danh m·ª•c s·∫£n ph·∫©m
      setDataCata(res); // L∆∞u danh m·ª•c v√†o state
    };
    fetchCategories();
  }, []);

  // üü¢ H√†m l·ªçc s·∫£n ph·∫©m theo danh m·ª•c v√† gi√°
  const filteredProducts = data.filter((product) => {
    // üü† Ki·ªÉm tra xem s·∫£n ph·∫©m c√≥ thu·ªôc danh m·ª•c ƒë√£ ch·ªçn kh√¥ng
    const isCategoryMatch =
      !selectedCategory || product.category === Number(selectedCategory);
    // N·∫øu kh√¥ng ch·ªçn danh m·ª•c (selectedCategory r·ªóng) ‚Üí Ch·∫•p nh·∫≠n t·∫•t c·∫£ s·∫£n ph·∫©m.
    // N·∫øu ƒë√£ ch·ªçn danh m·ª•c (selectedCategory c√≥ gi√° tr·ªã) ‚Üí Ch·ªâ gi·ªØ l·∫°i c√°c s·∫£n ph·∫©m c√≥ category kh·ªõp v·ªõi danh m·ª•c ƒë√£ ch·ªçn.

    // üü† Ki·ªÉm tra xem s·∫£n ph·∫©m c√≥ n·∫±m trong kho·∫£ng gi√° ƒë∆∞·ª£c ch·ªçn kh√¥ng
    const isPriceMatch = (() => {
      if (!selectedPriceRange) return true;
      // N·∫øu kh√¥ng ch·ªçn kho·∫£ng gi√°, tr·∫£ v·ªÅ true (kh√¥ng l·ªçc)

      const [min, max] = selectedPriceRange.split("-").map(Number);
      // Chuy·ªÉn kho·∫£ng gi√° t·ª´ chu·ªói th√†nh s·ªë

      return product.price >= min && product.price <= max; // Ki·ªÉm tra n·∫øu gi√° n·∫±m trong kho·∫£ng
    })();

    return isCategoryMatch && isPriceMatch; // Ch·ªâ gi·ªØ l·∫°i s·∫£n ph·∫©m th·ªèa m√£n c·∫£ 2 ƒëi·ªÅu ki·ªán
  });

  return (
    <>
      {/* üî¥ Banner khuy·∫øn m√£i */}
      <section className="section-1">
        <div className="banner">
          <div className="banner__text">
            <p className="banner__sale">GI·∫¢M ƒê·∫æN 50%</p>
          </div>
        </div>
      </section>

      {/* üü¢ Danh s√°ch s·∫£n ph·∫©m */}
      <section className="section-2">
        <h2 className="title">T·∫•t c·∫£ s·∫£n ph·∫©m</h2>
        <div className="container">
          {/* üü† Sidebar b·ªô l·ªçc s·∫£n ph·∫©m */}
          <aside className="sidebar">
            <h3 className="sidebar__title">L·ªçc s·∫£n ph·∫©m</h3>

            {/* üü¢ Dropdown ch·ªçn danh m·ª•c */}
            <select
              className="sidebar__dropdown"
              value={selectedCategory} // Gi√° tr·ªã c·ªßa dropdown
              onChange={(e) => setSelectedCategory(e.target.value)} // C·∫≠p nh·∫≠t state khi ch·ªçn danh m·ª•c
            >
              <option value="">Ch·ªçn danh m·ª•c</option>
              {dataCata.map((item) => (
                <option key={item.id} value={item.id}>
                  {item.name}
                </option>
              ))}
            </select>

            {/* üü¢ B·ªô l·ªçc gi√° */}
            <p className="sidebar__filter">Gi√° s·∫£n ph·∫©m</p>
            <ul className="sidebar__filter-list">
              {[
                { label: "D∆∞·ªõi 100.000ƒë", value: "0-100000" },
                { label: "100.000ƒë - 200.000ƒë", value: "100000-200000" },
                { label: "200.000ƒë - 300.000ƒë", value: "200000-300000" },
              ].map((range) => (
                <li className="sidebar__filter-item" key={range.value}>
                  <input
                    type="radio"
                    name="priceFilter"
                    value={range.value}
                    onChange={(e) => setSelectedPriceRange(e.target.value)}
                    checked={selectedPriceRange === range.value} // ƒê√°nh d·∫•u radio n·∫øu ƒë∆∞·ª£c ch·ªçn
                  />{" "}
                  {range.label}
                </li>
              ))}
            </ul>
          </aside>

          {/* üü¢ Danh s√°ch s·∫£n ph·∫©m sau khi l·ªçc */}
          <main className="main-content">
            <div className="product-grid">
              {filteredProducts.length > 0 ? (
                filteredProducts.map((product) => (
                  <div
                    key={product.id}
                    onClick={() => navigate(`/categories/${product.id}`)} // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt s·∫£n ph·∫©m
                    style={{ cursor: "pointer" }}
                  >
                    <ProductItem product={product} /> {/* Hi·ªÉn th·ªã s·∫£n ph·∫©m */}
                  </div>
                ))
              ) : (
                <h3>Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p.</h3> // Th√¥ng b√°o n·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m ph√π h·ª£p
              )}
            </div>
          </main>
        </div>
      </section>
    </>
  );
}

export default StoreAll;
